# Generated by Django 3.1.5 on 2021-02-16 16:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cargo', models.CharField(max_length=50, verbose_name='Грузовой')),
            ],
            options={
                'verbose_name': 'Грузовой',
                'verbose_name_plural': 'Грузовые',
            },
        ),
        migrations.CreateModel(
            name='CategoryLaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoryLaw', models.CharField(max_length=50, verbose_name='Водительские права')),
            ],
            options={
                'verbose_name': 'Водительские права',
                'verbose_name_plural': 'Водительские права',
            },
        ),
        migrations.CreateModel(
            name='Generator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generator', models.CharField(max_length=30, verbose_name='Генератор')),
            ],
            options={
                'verbose_name': 'Генератор',
                'verbose_name_plural': 'Генераторы',
            },
        ),
        migrations.CreateModel(
            name='LegalStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legalStatus', models.CharField(max_length=30, verbose_name='Юридический статус')),
            ],
            options={
                'verbose_name': 'Юридический статус',
                'verbose_name_plural': 'Юридические статусы',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(max_length=30, verbose_name='Нивелир')),
            ],
            options={
                'verbose_name': 'Нивелир',
                'verbose_name_plural': 'Нивелиры',
            },
        ),
        migrations.CreateModel(
            name='OrganizationalStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organizationalStructure', models.CharField(max_length=50, verbose_name='Организационный состав')),
            ],
            options={
                'verbose_name': 'Организационный состав',
                'verbose_name_plural': 'Организационные составы',
            },
        ),
        migrations.CreateModel(
            name='PassengerCar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passengerCar', models.CharField(max_length=50, verbose_name='Автомобиль легковой')),
            ],
            options={
                'verbose_name': 'Автомобиль легковой',
                'verbose_name_plural': 'Автомобили легковые',
            },
        ),
        migrations.CreateModel(
            name='SupplierEvaluationCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplierEvaluationCompany', models.PositiveSmallIntegerField(verbose_name='Оценка поставщика компанией')),
            ],
            options={
                'verbose_name': 'Оценка поставщика компании',
                'verbose_name_plural': 'Оценкаи поставщиков компаний',
            },
        ),
        migrations.CreateModel(
            name='SupplierEvaluationCustomer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplierEvaluationCustomer', models.PositiveSmallIntegerField(verbose_name='Оценка поставщика заказчиком')),
            ],
            options={
                'verbose_name': 'Оценка поставщика заказчиком',
                'verbose_name_plural': 'Оценки поставщиков заказчиком',
            },
        ),
        migrations.CreateModel(
            name='SupplierStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplierStatus', models.CharField(max_length=30, verbose_name='Статус поставщика')),
            ],
            options={
                'verbose_name': 'Статус поставщика',
                'verbose_name_plural': 'Статусы поставщиков',
            },
        ),
        migrations.CreateModel(
            name='TheTrailer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theTrailer', models.CharField(max_length=50, verbose_name='Прицеп')),
            ],
            options={
                'verbose_name': 'Прицеп',
                'verbose_name_plural': 'Прицепы',
            },
        ),
        migrations.CreateModel(
            name='WorkSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workSchedule', models.CharField(max_length=30, verbose_name='График работы')),
            ],
            options={
                'verbose_name': 'График работы',
                'verbose_name_plural': 'Графики работы',
            },
        ),
        migrations.CreateModel(
            name='CardTransportProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastName', models.CharField(max_length=30, verbose_name='Фамилия')),
                ('firstName', models.CharField(max_length=30, verbose_name='Имя')),
                ('middleName', models.CharField(blank=True, max_length=30, null=True, verbose_name='Отчество')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Почта')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='TransportProviderCard', verbose_name='Фотография человека')),
                ('tel1', models.CharField(max_length=12, unique=True, verbose_name='Телефоны')),
                ('openTruckLength', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Открытый грузовик полезная длина м.')),
                ('openTruckWidth', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Открытый грузовик полезная ширена м.')),
                ('openTruckHeight', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Открытый грузовик полезная Высота м.')),
                ('openTruckCarrying', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Открытый грузовик грузоподьёмность тон')),
                ('openTruckSelf_loader', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Открытый грузовик самопогрузчик тон')),
                ('closeTruckLength', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Закрытый грузовик полезная длина м.')),
                ('closeTruckWidth', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Закрытый грузовик полезная ширена м.')),
                ('closeTruckHeight', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Закрытый грузовик полезная Высота м.')),
                ('closeTruckCarrying', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Закрытый грузовик грузоподьёмность тон')),
                ('closeTruckAwning', models.BooleanField(default=False, verbose_name='Тент')),
                ('closeTruckMetal', models.BooleanField(default=False, verbose_name='Металл. Кунг')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('legalStatus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='installer.legalstatus', verbose_name='Юридический статус:')),
                ('supplierStatus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='installer.supplierstatus', verbose_name='Статус поставщика:')),
                ('workSchedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='installer.workschedule', verbose_name='График работы:')),
            ],
            options={
                'verbose_name': 'Карточка поставщика транспорта',
                'verbose_name_plural': 'Карточки поставщиков транспорта',
            },
        ),
        migrations.CreateModel(
            name='CardSpecialEquipmentSupplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastName', models.CharField(max_length=30, verbose_name='Фамилия')),
                ('firstName', models.CharField(max_length=30, verbose_name='Имя')),
                ('middleName', models.CharField(blank=True, max_length=30, null=True, verbose_name='Отчество')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Почта')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='TransportProviderCard', verbose_name='Фотография человека')),
                ('tel1', models.CharField(max_length=12, unique=True, verbose_name='Телефоны')),
                ('autocraneBoomLength', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Автокран Длина стрелы, м.')),
                ('autocraneLoadCapacity', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Автокран грузоподъемность, тн.')),
                ('autocraneCarBrand', models.CharField(blank=True, max_length=50, null=True, verbose_name='Автокран база, марка автомобиля')),
                ('autocraneWheelAxle', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Автокран колесных осей')),
                ('autocraneTheDriveAxis', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Автокран привод на оси')),
                ('autocraneTheAverageCostm_h', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Автокран средняя стоимость м/час')),
                ('autocraneTravelPlaceWork', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Автокран проезд к месту работ, руб.')),
                ('backhoeLoaderStamp', models.CharField(blank=True, max_length=30, null=True, verbose_name='Экскаватор погрузчик марка')),
                ('backhoeLoaderUsefulWidth', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Экскаватор погрузчик полезная Ширина, м.')),
                ('backhoeLoaderSideHeight', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Экскаватор погрузчик высота борта, м.')),
                ('backhoeLoaderLoadCapacity', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Экскаватор погрузчик грузоподъемность, тн.')),
                ('backhoeLoaderTheAverageCost', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Экскаватор погрузчик средняя  стоимость м/час')),
                ('backhoeLoaderTravelPlaceWork', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Экскаватор погрузчик проезд к месту работ, руб.')),
                ('backhoeLoaderBucket0_4', models.BooleanField(default=False, verbose_name='Экскаватор погрузчик ковш 0,4м.')),
                ('backhoeLoaderBucket0_6', models.BooleanField(default=False, verbose_name='Экскаватор погрузчик ковш 0,6м.')),
                ('backhoeLoaderBoer200', models.BooleanField(default=False, verbose_name='Экскаватор погрузчик бур Ф200мм')),
                ('backhoeLoaderBoer250', models.BooleanField(default=False, verbose_name='Экскаватор погрузчик бур Ф250мм')),
                ('backhoeLoaderBoer300', models.BooleanField(default=False, verbose_name='Экскаватор погрузчик бур Ф300мм')),
                ('backhoeLoaderHammer', models.BooleanField(default=False, verbose_name='Экскаватор погрузчик молот')),
                ('drillingDeviceStamp', models.CharField(blank=True, max_length=50, null=True, verbose_name='Бурильная установка марка (база)')),
                ('drillingDeviceWheelAxle', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Бурильная установка колесных осей')),
                ('drillingDeviceTheDriveAxis', models.CharField(blank=True, max_length=70, null=True, verbose_name='Бурильная установка привод на оси')),
                ('drillingDeviceTheAverageCostost', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Бурильная установка средняя  стоимость м/час')),
                ('drillingDeviceAverageCostPerMeter', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Бурильная установка средняя  стоимость пог.м.')),
                ('drillingDeviceTravelPlaceWork', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Бурильная установка проезд к месту работ, руб.')),
                ('drillingDeviceBoer200', models.BooleanField(default=False, verbose_name='Бурильная установка экскаватор погрузчик бур Ф200мм')),
                ('drillingDeviceBoer250', models.BooleanField(default=False, verbose_name='Бурильная установка экскаватор погрузчик бур Ф250мм')),
                ('drillingDeviceBoer300', models.BooleanField(default=False, verbose_name='Бурильная установка экскаватор погрузчик бур Ф300мм')),
                ('drillingDeviceAutotowerTo15', models.BooleanField(default=False, verbose_name='Бурильная установка автовышка до 15м.')),
                ('drillingDeviceAutotowerTo15_23', models.BooleanField(default=False, verbose_name='Бурильная установка автовышка от 15 до 23м.')),
                ('drillingDeviceAutotowerUp23', models.BooleanField(default=False, verbose_name='Бурильная установка автовышка от 23м.')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('legalStatus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='installer.legalstatus', verbose_name='Юридический статус')),
                ('supplierStatus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='installer.supplierstatus', verbose_name='Статус поставщика:')),
            ],
            options={
                'verbose_name': 'Карточка поставщика Спецтехники',
                'verbose_name_plural': 'Карточки поставщиков Спецтехники',
            },
        ),
        migrations.CreateModel(
            name='CardProviderOfConstructionAndInstallationWorks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastName', models.CharField(max_length=30, verbose_name='Фамилия')),
                ('firstName', models.CharField(max_length=30, verbose_name='Имя')),
                ('middleName', models.CharField(blank=True, max_length=30, null=True, verbose_name='Отчество')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Почта')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='TransportProviderCard', verbose_name='Фотография человека')),
                ('tel1', models.CharField(max_length=20, unique=True, verbose_name='Телефоны')),
                ('residentialAddress', models.CharField(max_length=200, verbose_name='Адрес проживания')),
                ('workingForFormica', models.BooleanField(default=False, verbose_name='работа в Формике')),
                ('fences3D', models.BooleanField(default=False, verbose_name='Заборы 3D')),
                ('fencesProfiled', models.BooleanField(default=False, verbose_name='Заборы прфлист')),
                ('assemblyOfGreenhouses', models.BooleanField(default=False, verbose_name='Сборщик теплиц')),
                ('installationOfSlidingGates', models.BooleanField(default=False, verbose_name='Установка откатных ворот')),
                ('installationOfElectricSlidingGateDrives', models.BooleanField(default=False, verbose_name='Установка электро приводов откатных ворот')),
                ('installationOfElectricSwingGateDrives', models.BooleanField(default=False, verbose_name='Установка электро приводов распашных ворот')),
                ('workingWithCellularPolycarbonate', models.BooleanField(default=False, verbose_name='Работа с Сотовым поликарбонатом')),
                ('assemblyOfMetalStructures', models.BooleanField(default=False, verbose_name='Сборка металлоконструкций')),
                ('weldingWorks', models.BooleanField(default=False, verbose_name='Сварочные работы')),
                ('cordlessScrewdriver', models.BooleanField(default=False, verbose_name='Шуроповёрт аккумуляторный')),
                ('electricDrill', models.BooleanField(default=False, verbose_name='Электрическая дрель')),
                ('circularSaw', models.BooleanField(default=False, verbose_name='Циркулярная пила')),
                ('LBMLow', models.BooleanField(default=False, verbose_name='УШМ малая')),
                ('LBMBig', models.BooleanField(default=False, verbose_name='УШМ большая')),
                ('levelBuilder', models.BooleanField(default=False, verbose_name='Строительный уровень')),
                ('gasDrill', models.BooleanField(default=False, verbose_name='Бензобур')),
                ('ladder', models.BooleanField(default=False, verbose_name='Лестница, стремянка')),
                ('setOfSpanners', models.BooleanField(default=False, verbose_name='Набор гаечных ключей')),
                ('weldingMachine', models.BooleanField(default=False, verbose_name='Сварочная аппарат')),
                ('extension', models.BooleanField(default=False, verbose_name='Удлинитель')),
                ('electricBump', models.BooleanField(default=False, verbose_name='Отбойник электрический')),
                ('gasolineBump', models.BooleanField(default=False, verbose_name='Отбойник бензиновый')),
                ('puncher', models.BooleanField(default=False, verbose_name='Перфоратор')),
                ('transportTheSpecifiedTool', models.BooleanField(default=False, verbose_name='Возможность перевозить  указанный инструмент на собственном автотранспорте')),
                ('deliveryMaterialsTransport', models.BooleanField(default=False, verbose_name='Доставка материалов на объект своим транспортном')),
                ('drivingLicense', models.BooleanField(default=False, verbose_name='Водительские права')),
                ('stamp', models.CharField(blank=True, max_length=50, null=True, verbose_name='Марка')),
                ('stateTheNumber', models.CharField(blank=True, max_length=12, null=True, verbose_name='гос. Номер')),
                ('passengerCarWithUpperTrunk', models.BooleanField(default=False, verbose_name='легковой с верхним багажником')),
                ('passengerCarWithTowBar', models.BooleanField(default=False, verbose_name='легковой с фаркопом')),
                ('cargoUpTo15tons', models.BooleanField(default=False, verbose_name='Грузовой До 1,5тн.')),
                ('cargoFrom15To50Tons', models.BooleanField(default=False, verbose_name='Грузовой От 1,5 до 5,0 тн.')),
                ('trailerLUpTo15m', models.BooleanField(default=False, verbose_name='Прицеп L = до 1,5м.')),
                ('trailerLFrom15To25m', models.BooleanField(default=False, verbose_name='Прицеп L= от 1,5 до 2,5м.')),
                ('trailerL25mOrMore', models.BooleanField(default=False, verbose_name='Прицеп L= 2,5м. и более.')),
                ('readinessToGoOnBusinessTrips', models.BooleanField(default=False, verbose_name='Готовность выезда в командировки')),
                ('readyToLearn', models.BooleanField(default=False, verbose_name='готовность к обучению')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('cargo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='installer.cargo', verbose_name='Грузовой')),
                ('categoryLaw', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='installer.categorylaw', verbose_name='Категория прав')),
                ('generator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='installer.generator', verbose_name='Генератор')),
                ('legalStatus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='installer.legalstatus', verbose_name='Юридический статус:')),
                ('level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='installer.level', verbose_name='Нивелир')),
                ('organizationalStructure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='installer.organizationalstructure', verbose_name='Организационный состав')),
                ('passengerCar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='installer.passengercar', verbose_name='Автомобиль легковой')),
                ('supplierStatus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='installer.supplierstatus', verbose_name='Статус поставщика:')),
                ('theTrailer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='installer.thetrailer', verbose_name='Прицеп')),
                ('workSchedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='installer.workschedule', verbose_name='График работы')),
            ],
            options={
                'verbose_name': 'Карточка поставщика Строительно-монтажных работ',
                'verbose_name_plural': 'Карточки поставщиков Строительно-монтажных работ',
            },
        ),
    ]
